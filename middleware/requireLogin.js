const jwt = require('jsonwebtoken')
const {JWT_SECRET} = require('../config/keys')
const mongoose = require('mongoose')
const User = mongoose.model("User")


module.exports= (req, res, next)=>{
  const {autherization} = req.headers;
  //autherization === Beare ewewerfdssdvv
  if(!autherization){
    return  res.status(401).json({error:"you must be logged in"})
  }
 const token = autherization.replace("Beare" , "")
 jwt.verify(token , JWT_SECRET , (err , payload)=>{
     if(err){
         return res.json({error:"you must be logged in "})
     }
    const {_id} = payload
    User.findOne(_id).then(userdata=>{
        req.user = userdata
    })
    next() //to stop middleware and continue 
 })
}







/*Bearer authentication (also called token authentication) 
is an HTTP authentication scheme that involves security tokens called bearer tokens.
 The name “Bearer authentication” can be understood as “give access to the bearer of this token.”
  The bearer token is a cryptic string, usually generated by the server in response to a login request.
   The client must send this token in the Authorization header when making requests to protected resources */